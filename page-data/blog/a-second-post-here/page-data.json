{"componentChunkName":"component---src-templates-blog-js","path":"/blog/a-second-post-here/","result":{"data":{"wordpressPost":{"title":"Is the Future of WordPress Code-Free?","content":"\r\n<p>One of the more unique aspects of WordPress is that designers can choose how they want to utilize it. We can build websites that do any number of things – and there are plenty of different ways to do so. For instance, we can create a theme <a href=\"https://speckyboy.com/free-resources-supercharge-wordpress-theme-development/\" target=\"_blank\" rel=\"noopener noreferrer\">from scratch</a> or download one of the thousands of <a href=\"https://speckyboy.com/free-wordpress-theme-ecommerce/\" target=\"_blank\" rel=\"noopener noreferrer\">free</a> or premium options. Or, we might choose to create content with the Gutenberg block editor or take advantage of a page builder plugin. These choices matter, as they will determine a lot about the finished product. Will it function the way we need it to? Will it look the way we want? How flexible will it be to change in the future? And, perhaps most importantly: will it lock us into a specific product? There’s a sort-of bottom line with these choices. In essence, we’re deciding <em>whether or not we want (or need) to write custom code</em>. It’s kind of a big deal. And, as WordPress and its ecosystem continue to evolve, it does make one wonder if more designers will choose <a href=\"https://speckyboy.com/building-wordpress-website-from-scratch-without-code/\" target=\"_blank\" rel=\"noopener noreferrer\">code-free</a> solutions. But, if so, what are the ramifications?</p>\r\n<h3>Page Builders Are Getting Better</h3>\r\n<p>We’ve arrived at this point in no small part because of the WordPress developer community. Page builder plugins, for example, have been around for years. Early on, these products tended to be sloppy approximations of what one could accomplish with some knowledge of CSS and PHP. Still, they brought the ability to create a custom page layout to a larger number of people. Professional designers (myself <a href=\"https://speckyboy.com/youre-worth-page-builder/\" target=\"_blank\" rel=\"noopener noreferrer\">included</a>) could sometimes be quite dismissive of these tools. Code-wise, they were very much all over the map in terms of quality. And utilizing a page builder felt like cheating your way through a project. However, plugin authors continued to improve their products. Modern tools have evolved to the point to where the code is cleaner and responsive. In addition, deactivating a page builder will result in lost content formatting, but no longer will your pages display massive amounts of <a href=\"https://chrislema.com/drag-and-drop-page-builders/\" target=\"_blank\" rel=\"noopener noreferrer\">unused shortcodes</a>.</p>\r\n<p><img class=\"aligncenter wp-image-82 size-full\" src=\"http://localhost/wordpress/wp-content/uploads/2019/10/coffee-writing-computer-blogging.jpg\" alt=\"\" width=\"1280\" height=\"853\" srcset=\"http://localhost/wordpress/wp-content/uploads/2019/10/coffee-writing-computer-blogging.jpg 1280w, http://localhost/wordpress/wp-content/uploads/2019/10/coffee-writing-computer-blogging-980x653.jpg 980w, http://localhost/wordpress/wp-content/uploads/2019/10/coffee-writing-computer-blogging-480x320.jpg 480w\" sizes=\"((min-width: 0px) and (max-width: 480px)) 480px, ((min-width: 481px) and (max-width: 980px)) 980px, (min-width: 981px) 1280px, 100vw\" /></p>\r\n<h3>Gutenberg Brings Blocks to a Default Installation</h3>\r\n<p>WordPress itself has moved to a more visually-oriented way to create content. When the Gutenberg block editor was introduced in WordPress 5.0, it aimed to bring a more consistent user experience. This was in part a response to the bespoke techniques developers had used to get around the Classic Editor’s limitations. It also signaled that you didn’t necessarily need to write custom code to accomplish more complex layouts and features. The editor has spawned its own ecosystem of <a href=\"https://speckyboy.com/top-custom-gutenberg-blocks-wordpress/\" target=\"_blank\" rel=\"noopener noreferrer\">custom blocks</a>, which you can add as needed. While Gutenberg isn’t necessarily in direct competition with full-blown page builders, it does provide a much more lightweight alternative. And, as more blocks become available, it will likely lead to more designers sticking with the native editing tool. In addition, the block editor will eventually allow for <a href=\"https://wptavern.com/initial-documentation-for-block-based-wordpress-themes-proposed\" target=\"_blank\" rel=\"noopener noreferrer\">full-site editing</a>. This means that, in addition to creating content, we’ll have the ability to create an entire website visually – all within a default installation of WordPress. When this comes to fruition, it seems that code will become very much optional for anyone building a website with WordPress. <img class=\"aligncenter wp-image-85 size-full\" src=\"http://localhost/wordpress/wp-content/uploads/2019/10/wp-code-free-02-e1587988544152.png\" alt=\"\" width=\"713\" height=\"378\" srcset=\"http://localhost/wordpress/wp-content/uploads/2019/10/wp-code-free-02-e1587988544152.png 713w, http://localhost/wordpress/wp-content/uploads/2019/10/wp-code-free-02-e1587988544152-300x159.png 300w\" sizes=\"(max-width: 713px) 100vw, 713px\" /></p>\r\n<h3>The Good and the Bad</h3>\r\n<p>The switch to a code-free site-building experience has some potential positives and negatives:</p>\r\n<h3>Positives</h3>\r\n<p>Whether it’s through a page builder plugin or Gutenberg, these tools allow anyone to create custom page layouts. In addition, they can add more complex content such as post listings, image galleries, navigation and more. All it takes is a few clicks, drags and drops. When used in combination with a compatible theme, the ability to build an entirely custom website also comes into the realm of possibility. This is a pretty big step for WordPress in terms of competing with many of the DIY website builders on the market. There is also an opportunity to usher in much more consistent editing and building experience. Too often, readymade themes have implemented custom solutions that can lead to confusion for users. And it didn’t help that even the recommended tool, the <a href=\"https://wordpress.org/support/article/appearance-customize-screen/\" target=\"_blank\" rel=\"noopener noreferrer\">WordPress Customizer</a>, is meant to handle some tasks – but not others. This has meant switching between various UIs to try and piece together a site. It’s doable, but not the most user-friendly process. Gutenberg’s continued evolution is a potential game-changer in this area. The back-and-forth between interfaces disappears, as we would have a singular UI for all of our design and layout-related tasks.</p>\r\n<h3>Negatives</h3>\r\n<p>Despite the many positives of a code-free future, there are some real drawbacks. Perhaps the most immediate is that it may just allow <a href=\"https://speckyboy.com/tips-for-working-with-technophobes/\" target=\"_blank\" rel=\"noopener noreferrer\">non-technical users</a> a little too much freedom. One of the really handy aspects of a custom-built theme is that designers can lock down items they don’t want clients to touch. That may become a much more difficult challenge if everything is available in a visual UI. This already exists somewhat with page builders. But Gutenberg could make it even easier for an adventurous client to go too far with their design experimentation. Hopefully, there will be some sort of built-in way to safeguard against this type of situation. The other large issue is a potential lack of opportunity to do more with a theme. After all, it’s often those little bits of custom code that make a website unique. Could this new way of doing things prevent developers from adding template-based code snippets? Will everything <em>have</em> to be a block? Finally, it’s also worth wondering if this discourages new developers from tinkering with code. Theme development is such a common starting point for learning PHP, CSS and JavaScript. True, creating custom blocks is an opportunity to write code. But not everyone will go that route. It would be a shame to see that can-do spirit go away.</p>\r\n<p><img class=\"alignnone wp-image-87 size-full\" src=\"http://localhost/wordpress/wp-content/uploads/2019/10/person-wearing-pair-of-black-slides-1272328.jpg\" alt=\"\" width=\"1920\" height=\"1280\" srcset=\"http://localhost/wordpress/wp-content/uploads/2019/10/person-wearing-pair-of-black-slides-1272328.jpg 1920w, http://localhost/wordpress/wp-content/uploads/2019/10/person-wearing-pair-of-black-slides-1272328-1280x853.jpg 1280w, http://localhost/wordpress/wp-content/uploads/2019/10/person-wearing-pair-of-black-slides-1272328-980x653.jpg 980w, http://localhost/wordpress/wp-content/uploads/2019/10/person-wearing-pair-of-black-slides-1272328-480x320.jpg 480w\" sizes=\"((min-width: 0px) and (max-width: 480px)) 480px, ((min-width: 481px) and (max-width: 980px)) 980px, ((min-width: 981px) and (max-width: 1280px)) 1280px, (min-width: 1281px) 1920px, 100vw\" /></p>\r\n<h3>An Evolving Landscape</h3>\r\n<p>The fact that WordPress is moving towards a visually-oriented design process has been evident for some time. Since the first glance at Gutenberg’s block-based editing experience, or even the advent of the Customizer years earlier, it seemed like the goal was to accomplish more design tasks without touching code. As the back end of the CMS becomes more polished, the way of building with WordPress as we know it is changing. Code will still be a part of the process – for those who wish to use it. For others, the design will fundamentally shift towards interactive tools. This will open up a whole new world of possibilities for a lot of people. What will it mean for web professionals? That story is still being written.</p>\r\n","excerpt":"<p>One of the more unique aspects of WordPress is that designers can choose how they want to utilize it. We can build websites that do any number of things – and there are plenty of different ways to do so. For instance, we can create a theme from scratch or download one of the thousands of free or premium [&hellip;]</p>\n","date":"October 14, 2019","author":{"name":"yassine_IB"},"featured_media":{"localFile":{"childImageSharp":{"fixed":{"src":"/static/405c672bbab94ed85dec60f4d2a0bc59/9d169/nesa-by-makers-IgUR1iX0mqM-unsplash-1.jpg","width":1500,"height":1500}}}}},"site":{"siteMetadata":{"title":"Portfolio","description":"Kick off your next, great Gatsby project with this default starter. This barebones starter ships with the main Gatsby configuration files you might need."}}},"pageContext":{"id":"2e4ae85c-a560-5087-8999-c35feb47985d"}}}